{"version":3,"sources":["container/EmpLogin/EmpLogin.js"],"names":["EmpWorkHour","isLoggedIn","useSelector","state","auth","login","localStorage","getItem","console","log","isLoggedInJsonObject","JSON","parse","e","email","jwt_decode","token","last7Days","split","map","n","month","day","year","d","Date","setDate","getDate","getMonth","getFullYear","join","useState","sdata","setData","handleStartWork","a","axios","post","process","data","handleStopWork","patch","window","location","reload","empWork","setEmpWork","useEffect","get","params","fetchData","sorted","sort","b","date","time","work","push","duration","h","m","nDate","i","labels","datasets","label","borderColor","backgroundColor","style","top","textAlign","md","sm","lg","xl","onClick","type","size","danger","display","justifyContent","width","paddingTop","options","title","text","scales","yAxes","ticks","min","max","stepSize"],"mappings":"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","file":"static/js/53.d7d311cf.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {Bar} from 'react-chartjs-2'\nimport { Main } from \"../styled\";\nimport { Row, Col, Button } from 'antd';\nimport {Cards} from '../../components/cards/frame/cards-frame';\nimport axios from 'axios'\nimport jwt_decode from 'jwt-decode'\n\n\nconst EmpWorkHour = () => {\n    \n  const { isLoggedIn } = useSelector(state => {\n    return {\n       \n      isLoggedIn: state.auth.login || localStorage.getItem('adminInfo')\n    };\n  });\n  console.log(isLoggedIn)\n  var isLoggedInJsonObject = {}\n  try {\n\n    isLoggedInJsonObject = JSON.parse(isLoggedIn); \n} catch (e) {\n\n    isLoggedInJsonObject = isLoggedIn;\n}   \n const decoded = jwt_decode(isLoggedInJsonObject.token)\n    const email = decoded.email\n  \n    \n    // test\n    function Last7Days () {\n      return '0123456'.split('').map(function(n) {\n          var d = new Date();\n          d.setDate(d.getDate() - n);\n  \n          return (function(month, day, year) {\n              return [month<10 ? '0'+month : month, day<10 ? '0'+day : day, year].join('/');\n          })(d.getMonth() + 1, d.getDate(), d.getFullYear());\n      });\n   }\n\n   const last7Days = Last7Days()\n   console.log(last7Days);\n   const day0 = last7Days[0]\n   const day1 = last7Days[1]\n   const day2 = last7Days[2]\n   const day3 = last7Days[3]\n   const day4 = last7Days[4]\n   const day5 = last7Days[5]\n   const day6 = last7Days[6]\n    // test\n\n  const [sdata, setData] = useState('')\n  const handleStartWork = async (e) => {\n    const {data} = await axios.post(`${process.env.REACT_APP_API}/api/v1/work/start`, {email: email})\n    setData(data)\n    console.log(data);\n  }\n  const handleStopWork = async (e) => {\n    const {data} = await axios.patch(`${process.env.REACT_APP_API}/api/v1/work/stop`, sdata)\n    window.location.reload()\n  }\n\n    const [empWork, setEmpWork] = useState([])\n  useEffect(() => {\n    const fetchData = async () => {\n      const {data} = await axios.get(`${process.env.REACT_APP_API}/api/v1/works`, {params: {email: email}})    \n      console.log(data);\n      setEmpWork(data)\n    }\n    fetchData()\n  }, [])\n\n  function sortByDate(a, b) {\n    if (a.date < b.date) {\n        return 1;\n    }\n    if (a.date > b.date) {\n        return -1;\n    }\n    return 0;\n}\nconst sorted = empWork.sort(sortByDate);\nconsole.log(sorted);\n\n\n\n\n  const time = []\n  const date = []\n  sorted.map((work) => {\n    time.push(work.duration.h + (work.duration.m)/60)\n    date.push(work.date)\n    \n  })\n  const nDate = []\n  for(let i=0; i<7; i++) {\n    nDate.push(date[i])\n  }\n\n  console.log(time);\n\n  const data = {\n    labels: nDate,\n    datasets: [\n      {\n        label: \"Work Hour\",\n        data: time,\n        borderColor: ['#001737','#001737','#001737','#001737','#001737','#001737','#001737'],\n        backgroundColor: ['#1ce1ac','#1ce1ac','#1ce1ac','#1ce1ac','#1ce1ac','#1ce1ac','#1ce1ac']\n      }\n    ]\n\n  }\n  const options = {\n    title: {\n      display: true,\n      text: 'Last 7 Days Work Hour'\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            min: 0,\n            max: 12,\n            stepSize: 2\n          }\n        }\n      ]\n    }\n  }\n\n \n\n  return (\n      <>\n        <Row>\n            <Col style={{top: '2rem', textAlign: 'center'}} md={8} sm={8} lg={8} xl={8}>\n            <Button onClick={handleStartWork} type=\"primary\" size='large'>\n          Start Work\n        </Button>\n        \n            </Col>\n            <Col style={{top: '2rem', textAlign: 'center'}} md={8} sm={8} lg={8} xl={8}>\n            <h4>Total Work Hour of last 7 Days: <strong></strong></h4> \n            </Col>\n            <Col style={{top: '2rem', textAlign: 'center'}} md={8} sm={8} lg={8} xl={8}>\n            <Button onClick={handleStopWork} type=\"primary\" danger size='large'>\n          Stop Work\n        </Button>\n        \n            </Col>\n        </Row>\n          <Main style={{display: 'flex', justifyContent: 'center',width: '70vw', paddingTop: '4rem'}}>\n            \n            \n            <Bar data={data} options={options} />\n          </Main>\n          \n      </>\n  )\n}\n\nexport default EmpWorkHour"],"sourceRoot":""}