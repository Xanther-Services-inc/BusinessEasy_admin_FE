{"version":3,"sources":["container/ecommerce/orders/orderGraph.js","redux/orders/actionCreator.js"],"names":["OrderGraph","dispatch","useDispatch","orderList","useSelector","state","orders","data","loading","err","useEffect","orderFilter","counts","forEach","x","startDate","dates","values","Object","entries","key","value","push","finalOrderNumber","finalOrderDates","i","orderData","labels","datasets","label","borderColor","backgroundColor","style","textAlign","textDecoration","paddingTop","fontSize","options","title","display","text","scales","yAxes","ticks","min","max","stepSize","filterOrderBegin","actions","filterOrderSuccess","filterOrderErr","statusBegin","statusSuccess","statusErr","column","a","axios","get","process","orderStatusUpdate","status","id","put","statusData"],"mappings":"4KA6EeA,UAvEI,WACf,IAAMC,EAAWC,cACbC,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAE/BC,GAAaJ,EAAtBK,QAAsBL,EAAbI,MAAaJ,EAAPM,IAEtBC,qBAAU,WACRT,EAASU,2BAER,CAACV,IAGJ,IAAIW,EAAS,GACbL,EAAKM,SAAQ,SAASC,GAAKF,EAAOE,EAAEC,YAAcH,EAAOE,EAAEC,YAAc,GAAG,KAM5E,IAHA,IAAMC,EAAQ,GACRC,EAAS,GAEf,MAA2BC,OAAOC,QAAQP,GAA1C,eAAmD,CAAC,IAAD,sBAAvCQ,EAAuC,KAAlCC,EAAkC,KACjDL,EAAMM,KAAKF,GACXH,EAAOK,KAAKD,GAMhB,IAFE,IAAME,EAAmB,GACnBC,EAAkB,GAClBC,EAAE,EAAGA,EAAE,EAAGA,IACdF,EAAiBD,KAAKL,EAAOQ,IAC7BD,EAAgBF,KAAKN,EAAMS,IAI/B,IAAMC,EAAY,CACdC,OAAQH,EACRI,SAAU,CACR,CACEC,MAAO,cACPtB,KAAMgB,EACNO,YAAa,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAC1EC,gBAAiB,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,cAuBlF,OACI,oCACA,wBAAIC,MAAO,CAACC,UAAW,SAAUC,eAAgB,YAAaC,WAAY,MAAOC,SAAU,SAA3F,eACA,kBAAC,MAAD,CAAK7B,KAAMmB,EAAWW,QArBZ,CACdC,MAAO,CACLC,SAAS,EACTC,KAAM,qBAERC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,IAAK,EACLC,IAAK,GACLC,SAAU,Y,qMCzDdC,EAAgGC,UAAhGD,iBAAkBE,EAA8ED,UAA9EC,mBAAoBC,EAA0DF,UAA1DE,eAAgBC,EAA0CH,UAA1CG,YAAaC,EAA6BJ,UAA7BI,cAAeC,EAAcL,UAAdK,UAEpF1C,EAAc,SAAC2C,EAAQjC,GAC3B,8CAAO,WAAMpB,GAAN,iBAAAsD,EAAA,sEAEHtD,EAAS8C,KAFN,SAIkBS,IAAMC,IAAN,UAAaC,2BAAb,mBAJlB,gBAIInD,EAJJ,EAIIA,KAEPN,EAASgD,EAAmB1C,IANzB,gDASLN,EAASiD,EAAe,EAAD,KATlB,yDAAP,uDAcIS,EAAoB,SAACC,EAAQC,GACjC,8CAAO,WAAM5D,GAAN,iBAAAsD,EAAA,sEAEHtD,EAASkD,KAFN,SAIwBK,IAAMM,IAAN,UAAaJ,2BAAb,4BAA0DG,GAAM,CAACD,WAJzF,gBAIIG,EAJJ,EAIIA,WAEP9D,EAASmD,EAAcW,IANpB,gDAQH9D,EAASoD,EAAU,EAAD,KARf,yDAAP,wD","file":"static/js/37.43d22475.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport {Bar} from 'react-chartjs-2'\nimport {useSelector, useDispatch} from 'react-redux'\nimport { orderFilter } from '../../../redux/orders/actionCreator';\n\n\nconst OrderGraph = () => {\n    const dispatch = useDispatch()\n  const orderList = useSelector((state) => state.orders)\n\n  const {loading, data, err} = orderList\n\n  useEffect(() => {\n    dispatch(orderFilter());\n  \n  }, [dispatch]);\n\n\n  var counts = {};\n  data.forEach(function(x) { counts[x.startDate] = (counts[x.startDate] || 0)+1; });\n\n \n  const dates = []\n  const values = []\n\n  for (const [key, value] of Object.entries(counts)) {\n    dates.push(key)\n    values.push(value)\n}\n\n\n  const finalOrderNumber = []\n  const finalOrderDates = []\nfor(let i=0; i<7; i++) {\n    finalOrderNumber.push(values[i])\n    finalOrderDates.push(dates[i])\n    \n}\n\nconst orderData = {\n    labels: finalOrderDates,\n    datasets: [\n      {\n        label: \"Order Count\",\n        data: finalOrderNumber,\n        borderColor: ['#ff6f00','#ff6f00','#ff6f00','#ff6f00','#ff6f00','#ff6f00','#ff6f00'],\n        backgroundColor: ['#51ff00','#51ff00','#51ff00','#51ff00','#51ff00','#51ff00','#51ff00']\n      }\n    ]\n\n  }\n  const options = {\n    title: {\n      display: true,\n      text: 'Last 7 Days Order'\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            min: 0,\n            max: 20,\n            stepSize: 2\n          }\n        }\n      ]\n    }\n  }\n\n    return (\n        <>\n        <h1 style={{textAlign: 'center', textDecoration: 'underline', paddingTop: '5px', fontSize: '2rem'}}>Order Graph</h1>\n        <Bar data={orderData} options={options} />\n        </>\n    )\n}\n\nexport default OrderGraph;","import actions from './actions';\r\nimport initialState from '../../demoData/orders.json';\r\nimport axios from 'axios'\r\n\r\n\r\nconst { filterOrderBegin, filterOrderSuccess, filterOrderErr, statusBegin, statusSuccess, statusErr } = actions;\r\n\r\nconst orderFilter = (column, value) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(filterOrderBegin());\r\n\r\n      const {data} = await axios.get(`${process.env.REACT_APP_API}/api/v1/orders`)\r\n      \r\n      dispatch(filterOrderSuccess(data))\r\n\r\n  } catch(err){\r\n    dispatch(filterOrderErr(err))\r\n  }\r\n}\r\n}\r\n\r\nconst orderStatusUpdate = (status, id) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(statusBegin())\r\n\r\n      const {statusData} = await axios.put(`${process.env.REACT_APP_API}/api/v1/order?id=${id}`, {status})\r\n\r\n      dispatch(statusSuccess(statusData))\r\n    } catch(err ){\r\n      dispatch(statusErr(err))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport { orderFilter, orderStatusUpdate };\r\n"],"sourceRoot":""}